name: 'Claude Review Receiver (Unprivileged)'

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
      - develop

jobs:
  analyze-pr:
    name: 'Analyze PR for Review Processing'
    runs-on: ubuntu-latest
    # This runs in unprivileged context - no secrets access
    permissions:
      contents: read
      pull-requests: read
    
    # Only process PRs from claude-auto branches or with specific label
    if: |
      startsWith(github.event.pull_request.head.ref, 'claude-auto/') ||
      contains(github.event.pull_request.labels.*.name, 'claude-review')
    
    steps:
      - name: 'Checkout PR Code (Unprivileged)'
        uses: actions/checkout@v4
        with:
          # Use the PR head ref in unprivileged context
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: 'Collect PR Metadata'
        id: pr_metadata
        run: |
          # Collect safe metadata about the PR
          echo "pr_number=${{ github.event.pull_request.number }}" > pr_metadata.txt
          echo "pr_branch=${{ github.event.pull_request.head.ref }}" >> pr_metadata.txt
          echo "pr_base=${{ github.event.pull_request.base.ref }}" >> pr_metadata.txt
          echo "pr_sha=${{ github.event.pull_request.head.sha }}" >> pr_metadata.txt
          echo "pr_author=${{ github.event.pull_request.user.login }}" >> pr_metadata.txt
          
          # Check if this is a trusted contributor (optional)
          TRUSTED_USERS="bstewart2255,dependabot[bot],claude-automation[bot]"
          if echo "$TRUSTED_USERS" | grep -q "${{ github.event.pull_request.user.login }}"; then
            echo "trusted=true" >> pr_metadata.txt
          else
            echo "trusted=false" >> pr_metadata.txt
          fi
          
          echo "Metadata collected for PR #${{ github.event.pull_request.number }}"

      - name: 'Run Static Analysis (No Code Execution)'
        run: |
          # Run safe static analysis that doesn't execute PR code
          echo "file_count=$(find . -type f -name '*.ts' -o -name '*.tsx' -o -name '*.js' -o -name '*.jsx' | wc -l)" >> pr_metadata.txt
          echo "lines_changed=${{ github.event.pull_request.additions }}+${{ github.event.pull_request.deletions }}" >> pr_metadata.txt
          
          # List modified files (safe operation)
          git diff --name-only origin/${{ github.event.pull_request.base.ref }}...HEAD > modified_files.txt

      - name: 'Package Metadata for Privileged Workflow'
        run: |
          # Create artifact directory
          mkdir -p pr_artifacts
          
          # Copy metadata files
          cp pr_metadata.txt pr_artifacts/
          cp modified_files.txt pr_artifacts/
          
          # Add timestamp
          echo "timestamp=$(date -u +%Y%m%d%H%M%S)" >> pr_artifacts/pr_metadata.txt
          
          # Create checksum for verification
          sha256sum pr_artifacts/* > pr_artifacts/checksums.txt

      - name: 'Upload PR Artifacts'
        uses: actions/upload-artifact@v4
        with:
          name: pr-${{ github.event.pull_request.number }}-artifacts
          path: pr_artifacts/
          retention-days: 1

      - name: 'Post Status Comment'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.pull_request.number }},
              body: 'üîç PR analysis complete. Waiting for review processing...'
            });